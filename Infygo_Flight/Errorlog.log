2021-09-21 18:32:18  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-21 18:37:18  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-21 18:42:18  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-21 18:46:38  INFO [RMI TCP Connection(39)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-21 18:46:38  INFO [RMI TCP Connection(39)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-21 18:46:38  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632249998947, current=DOWN, previous=UP]
2021-09-21 18:46:38  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-21 18:46:38  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-21 18:46:38  INFO [RMI TCP Connection(39)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-21 18:46:38  INFO [RMI TCP Connection(39)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-21 18:46:38  INFO [RMI TCP Connection(39)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-21 18:46:38  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-21 18:46:42  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-21 18:46:42  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-21 18:46:42  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-21 18:46:48  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 14080 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-21 18:46:48  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-21 18:46:48  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-21 18:46:48  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-21 18:46:49  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-21 18:46:50  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 242 ms. Found 1 JPA repository interfaces.
2021-09-21 18:46:50  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=7967da42-6e23-3b95-a9d5-46edf9a6df4e
2021-09-21 18:46:51  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-21 18:46:51  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-21 18:46:51  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-21 18:46:51  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-21 18:46:51  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring embedded WebApplicationContext
2021-09-21 18:46:51  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3306 ms
2021-09-21 18:46:52  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-21 18:46:52  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-21 18:46:52  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-21 18:46:52  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-21 18:46:53  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-21 18:46:53  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-21 18:46:54  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-21 18:46:54  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-21 18:46:54  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-21 18:46:56  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [restTemplateDiscoveryClientOptionalArgs] - Eureka HTTP Client uses RestTemplate.
2021-09-21 18:46:56  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-21 18:46:56  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-21 18:46:56  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632250016755 with initial instances count: 2
2021-09-21 18:46:56  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-21 18:46:56  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632250016761, current=UP, previous=STARTING]
2021-09-21 18:46:56  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-21 18:46:56  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path '/InfyGo'
2021-09-21 18:46:56  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-21 18:46:56  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-21 18:46:56  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 10.21 seconds (JVM running for 11.52)
2021-09-21 18:46:57  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-21 18:46:57  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-21 18:46:57  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-21 18:48:07  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-21 18:48:07  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-21 18:48:07  WARN [http-nio-4545-exec-1] org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [logException] - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: class java.util.LinkedHashMap cannot be cast to class java.lang.String (java.util.LinkedHashMap and java.lang.String are in module java.base of loader 'bootstrap'); nested exception is com.fasterxml.jackson.databind.JsonMappingException: class java.util.LinkedHashMap cannot be cast to class java.lang.String (java.util.LinkedHashMap and java.lang.String are in module java.base of loader 'bootstrap') (through reference chain: com.infy.infygo.flight.dto.SearchFlights["bookinglist"]->java.util.ArrayList[0])]
2021-09-21 18:51:56  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-21 18:56:56  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-21 19:01:56  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-21 19:06:44  INFO [RMI TCP Connection(29)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-21 19:06:44  INFO [RMI TCP Connection(29)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-21 19:06:44  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632251204379, current=DOWN, previous=UP]
2021-09-21 19:06:44  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-21 19:06:44  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-21 19:06:44  INFO [RMI TCP Connection(29)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-21 19:06:44  INFO [RMI TCP Connection(29)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-21 19:06:44  INFO [RMI TCP Connection(29)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-21 19:06:44  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-21 19:06:47  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-21 19:06:47  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-21 19:06:47  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-21 19:07:23  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 10488 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-21 19:07:23  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-21 19:07:23  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-21 19:07:23  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-21 19:07:24  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-21 19:07:25  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 452 ms. Found 1 JPA repository interfaces.
2021-09-21 19:07:25  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=7967da42-6e23-3b95-a9d5-46edf9a6df4e
2021-09-21 19:07:26  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-21 19:07:26  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-21 19:07:26  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-21 19:07:27  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-21 19:07:27  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring embedded WebApplicationContext
2021-09-21 19:07:27  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 4531 ms
2021-09-21 19:07:28  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-21 19:07:28  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-21 19:07:28  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-21 19:07:28  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-21 19:07:29  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-21 19:07:29  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-21 19:07:30  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-21 19:07:30  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-21 19:07:31  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-21 19:07:33  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [restTemplateDiscoveryClientOptionalArgs] - Eureka HTTP Client uses RestTemplate.
2021-09-21 19:07:33  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-21 19:07:33  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-21 19:07:33  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-21 19:07:33  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-21 19:07:33  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-21 19:07:33  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-21 19:07:33  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-21 19:07:33  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-21 19:07:33  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-21 19:07:33  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-21 19:07:33  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-21 19:07:33  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-21 19:07:34  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-21 19:07:34  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-21 19:07:34  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-21 19:07:34  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632251254086 with initial instances count: 1
2021-09-21 19:07:34  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-21 19:07:34  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632251254092, current=UP, previous=STARTING]
2021-09-21 19:07:34  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-21 19:07:34  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path '/InfyGo'
2021-09-21 19:07:34  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-21 19:07:34  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-21 19:07:34  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 13.426 seconds (JVM running for 14.717)
2021-09-21 19:07:35  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-21 19:07:35  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-21 19:07:35  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-21 19:09:27  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-21 19:09:27  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-21 19:09:27  WARN [http-nio-4545-exec-2] org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [logException] - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: class java.util.LinkedHashMap cannot be cast to class java.lang.String (java.util.LinkedHashMap and java.lang.String are in module java.base of loader 'bootstrap'); nested exception is com.fasterxml.jackson.databind.JsonMappingException: class java.util.LinkedHashMap cannot be cast to class java.lang.String (java.util.LinkedHashMap and java.lang.String are in module java.base of loader 'bootstrap') (through reference chain: com.infy.infygo.flight.dto.SearchFlights["bookinglist"]->java.util.ArrayList[0])]
2021-09-21 19:12:30  INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-21 19:12:30  INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-21 19:12:30  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632251550124, current=DOWN, previous=UP]
2021-09-21 19:12:30  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-21 19:12:30  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/} exception=I/O error on POST request for "http://localhost:2222/eureka/apps/FLIGHTMS": Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:2222/eureka/apps/FLIGHTMS": Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	... 21 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:565)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 34 more

2021-09-21 19:12:30  WARN [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: I/O error on POST request for "http://localhost:2222/eureka/apps/FLIGHTMS": Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2021-09-21 19:12:30  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=I/O error on POST request for "http://localhost:2222/eureka/apps/FLIGHTMS": Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:2222/eureka/apps/FLIGHTMS": Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	... 22 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:565)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 35 more

2021-09-21 19:12:30  WARN [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: I/O error on POST request for "http://localhost:2222/eureka/apps/FLIGHTMS": Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2021-09-21 19:12:30  WARN [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-21 19:12:30  WARN [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.InstanceInfoReplicator [run] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-21 19:12:30  INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-21 19:12:30  INFO [RMI TCP Connection(12)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-21 19:12:30  INFO [RMI TCP Connection(12)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-21 19:12:30  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-21 19:12:33  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-21 19:12:33  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=I/O error on DELETE request for "http://localhost:2222/eureka/apps/FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545": Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:2222/eureka/apps/FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545": Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:177)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1152)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1145)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:260)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:809)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1466)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1307)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1399)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:827)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:691)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:391)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	... 76 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:576)
	at java.base/sun.nio.ch.Net.connect(Net.java:565)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 89 more

2021-09-21 19:12:33  WARN [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: I/O error on DELETE request for "http://localhost:2222/eureka/apps/FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545": Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:2222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2021-09-21 19:12:33 ERROR [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:177)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1152)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1145)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:260)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:809)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1466)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1307)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1399)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:827)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:691)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:391)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-21 19:12:33  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 03:57:39  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 12168 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 03:57:39  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 03:57:39  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 03:57:39  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 03:57:44  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 03:57:45  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 800 ms. Found 1 JPA repository interfaces.
2021-09-22 03:57:46  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=71d2405b-a661-3f4b-8de5-3cb73606f658
2021-09-22 03:57:48  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 03:57:49  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 03:57:49  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 03:57:50  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 03:57:50  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 03:57:50  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 10735 ms
2021-09-22 03:58:01  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 03:58:01  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 03:58:02  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 03:58:02  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 03:58:04  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 03:58:04  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 03:58:06  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 03:58:06  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 03:58:07  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 03:58:07  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 03:58:07  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 03:58:07  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 03:58:07  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 03:58:10  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 03:58:10  INFO [RMI TCP Connection(4)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 03:58:10  INFO [RMI TCP Connection(4)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 03:58:10  INFO [RMI TCP Connection(4)-127.0.0.1] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 03:58:10  INFO [RMI TCP Connection(4)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 53 ms
2021-09-22 03:58:10  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 03:58:10  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 03:58:11  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 03:58:11  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 03:58:11  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 03:58:11  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 03:58:11  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632283092873 with initial instances count: 0
2021-09-22 03:58:12  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 03:58:12  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632283092882, current=UP, previous=STARTING]
2021-09-22 03:58:12  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 03:58:12  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 03:58:12  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path '/InfyGo'
2021-09-22 03:58:12  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 03:58:13  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 40.775 seconds (JVM running for 44.245)
2021-09-22 03:58:42  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 03:58:42  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 03:58:42  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 03:58:42  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 03:58:42  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 03:58:42  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: false
2021-09-22 03:58:42  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 03:58:42  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 04:02:49  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 04:02:49  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 04:02:50  INFO [http-nio-4545-exec-2] com.netflix.config.ChainedDynamicProperty [checkAndFlip] - Flipping property: flightribbon.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-09-22 04:02:50  INFO [http-nio-4545-exec-2] com.netflix.util.concurrent.ShutdownEnabledTimer [<init>] - Shutdown hook installed for: NFLoadBalancer-PingTimer-flightribbon
2021-09-22 04:02:50  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.BaseLoadBalancer [initWithConfig] - Client: flightribbon instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=flightribbon,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-09-22 04:02:50  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.DynamicServerListLoadBalancer [enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
2021-09-22 04:02:50  INFO [http-nio-4545-exec-2] com.netflix.config.ChainedDynamicProperty [checkAndFlip] - Flipping property: flightribbon.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-09-22 04:02:50  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.DynamicServerListLoadBalancer [restOfInit] - DynamicServerListLoadBalancer for client flightribbon initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=flightribbon,current list of Servers=[localhost:4444],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:4444;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.netflix.loadbalancer.ConfigurationBasedServerList@83cc202
2021-09-22 04:02:50 ERROR [http-nio-4545-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [/InfyGo] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} ... (431 bytes)]] with root cause
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} ... (431 bytes)]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:125)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:65)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 04:02:51  INFO [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty [checkAndFlip] - Flipping property: flightribbon.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-09-22 04:03:12  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 04:08:12  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 05:32:55  WARN [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool [run] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h21m51s473ms581µs400ns).
2021-09-22 05:34:34  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 05:39:34  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 05:40:34  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/} exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more

2021-09-22 05:40:34  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/} exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 more

2021-09-22 05:40:34  WARN [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 05:40:34  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2021-09-22 05:40:34  WARN [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 05:40:34  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)

2021-09-22 05:40:34  WARN [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 05:40:34  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more

2021-09-22 05:40:34  WARN [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 05:40:34 ERROR [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [renew] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 05:41:04  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [renew] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - Re-registering apps/FLIGHTMS
2021-09-22 05:41:04  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 05:41:04  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 05:41:25  INFO [RMI TCP Connection(39)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 05:41:25  INFO [RMI TCP Connection(39)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 05:41:25  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632289285312, current=DOWN, previous=UP]
2021-09-22 05:41:25  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 05:41:25  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 05:41:25  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.util.concurrent.ShutdownEnabledTimer [cancel] - Shutdown hook removed for: NFLoadBalancer-PingTimer-flightribbon
2021-09-22 05:41:25  INFO [Thread-6] com.netflix.loadbalancer.PollingServerListUpdater [run] - Shutting down the Executor Pool for PollingServerListUpdater
2021-09-22 05:41:25  INFO [RMI TCP Connection(39)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 05:41:25  INFO [RMI TCP Connection(39)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 05:41:25  INFO [RMI TCP Connection(39)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 05:41:25  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 05:41:28  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 05:41:28  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 05:41:28  INFO [RMI TCP Connection(39)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 05:43:49  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 8512 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 05:43:49  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 05:43:49  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 05:43:49  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 05:43:51  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 05:43:51  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 210 ms. Found 1 JPA repository interfaces.
2021-09-22 05:43:52  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=71d2405b-a661-3f4b-8de5-3cb73606f658
2021-09-22 05:43:52  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 05:43:52  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 05:43:52  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 05:43:53  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 05:43:53  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 05:43:53  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3483 ms
2021-09-22 05:43:53  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 05:43:53  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 05:43:54  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 05:43:54  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 05:43:54  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 05:43:54  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 05:43:55  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 05:43:55  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 05:43:56  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 05:43:56  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 05:43:56  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 05:43:56  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 05:43:56  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 05:43:57  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 05:43:57  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 05:43:57  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 05:43:58  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 05:43:58  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 05:43:58  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 05:43:58  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 05:43:58  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 05:43:58  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 05:43:58  INFO [RMI TCP Connection(1)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 05:43:58  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 05:43:58  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 4 ms
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632289439699 with initial instances count: 1
2021-09-22 05:43:59  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 05:43:59  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632289439707, current=UP, previous=STARTING]
2021-09-22 05:43:59  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 05:43:59  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 05:43:59  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path '/InfyGo'
2021-09-22 05:43:59  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 05:43:59  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.941 seconds (JVM running for 13.3)
2021-09-22 05:48:59  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 05:53:59  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 05:58:59  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:03:00  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [renew] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - Re-registering apps/FLIGHTMS
2021-09-22 06:03:00  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:03:00  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:03:23  INFO [RMI TCP Connection(29)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 06:03:23  INFO [RMI TCP Connection(29)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 06:03:23  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632290603314, current=DOWN, previous=UP]
2021-09-22 06:03:23  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:03:23  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:03:23  INFO [RMI TCP Connection(29)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:03:23  INFO [RMI TCP Connection(29)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 06:03:23  INFO [RMI TCP Connection(29)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 06:03:23  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 06:03:26  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 06:03:26  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 06:03:26  INFO [RMI TCP Connection(29)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 06:03:44  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 11660 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 06:03:44  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 06:03:44  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 06:03:44  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 06:03:46  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 06:03:46  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 307 ms. Found 1 JPA repository interfaces.
2021-09-22 06:03:47  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 06:03:48  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 06:03:48  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 06:03:48  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 06:03:48  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 06:03:49  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 06:03:49  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 4646 ms
2021-09-22 06:03:49  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 06:03:49  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 06:03:49  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 06:03:50  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 06:03:50  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 06:03:50  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 06:03:52  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 06:03:52  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:03:53  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:03:53  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:03:53  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:03:53  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:03:53  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 06:03:55  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 06:03:55  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 06:03:55  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 06:03:55  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 42 ms
2021-09-22 06:03:55  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 06:03:55  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 06:03:55  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 06:03:56  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 06:03:56  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 06:03:56  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 06:03:56  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 06:03:56  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632290637898 with initial instances count: 2
2021-09-22 06:03:57  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 06:03:57  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632290637906, current=UP, previous=STARTING]
2021-09-22 06:03:57  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:03:57  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:03:57  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path '/InfyGo'
2021-09-22 06:03:57  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 06:03:58  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 17.251 seconds (JVM running for 19.491)
2021-09-22 06:04:26 ERROR [http-nio-4545-exec-3] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [/InfyGo] threw exception [Request processing failed; nested exception is java.lang.IndexOutOfBoundsException: Index: 0] with root cause
java.lang.IndexOutOfBoundsException: Index: 0
	at java.base/java.util.Collections$EmptyList.get(Collections.java:4553)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 06:04:30  INFO [http-nio-4545-exec-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:04:30  INFO [http-nio-4545-exec-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:04:30 ERROR [http-nio-4545-exec-4] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [/InfyGo] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} ... (431 bytes)]] with root cause
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} ... (431 bytes)]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:125)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:751)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:352)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 06:08:25  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 06:08:25  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 06:08:25  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632290905639, current=DOWN, previous=UP]
2021-09-22 06:08:25  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:08:25  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:08:25  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:08:25  INFO [RMI TCP Connection(14)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 06:08:25  INFO [RMI TCP Connection(14)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 06:08:25  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 06:08:28  WARN [DiscoveryClient-1] com.netflix.discovery.TimedSupervisorTask [run] - task supervisor shutting down, can't accept the task
2021-09-22 06:08:28  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 06:08:28  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 06:08:29  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 06:08:40  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 14488 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 06:08:40  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 06:08:40  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 06:08:40  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 06:08:42  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 06:08:42  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 222 ms. Found 1 JPA repository interfaces.
2021-09-22 06:08:43  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 06:08:43  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 06:08:44  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 06:08:44  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 06:08:44  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 06:08:44  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 06:08:44  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3657 ms
2021-09-22 06:08:45  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 06:08:45  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 06:08:45  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 06:08:45  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 06:08:46  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 06:08:46  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 06:08:47  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 06:08:47  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:08:47  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:08:47  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:08:47  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:08:47  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:08:48  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 06:08:49  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 06:08:49  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 06:08:49  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 06:08:49  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 06:08:49  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 06:08:49  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 06:08:49  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 06:08:49  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 06:08:49  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632290930645 with initial instances count: 3
2021-09-22 06:08:50  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 06:08:50  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632290930650, current=UP, previous=STARTING]
2021-09-22 06:08:50  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:08:50  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:08:50  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path '/InfyGo'
2021-09-22 06:08:50  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 06:08:50  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.78 seconds (JVM running for 13.228)
2021-09-22 06:08:51  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 06:08:51  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 06:08:51  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 4 ms
2021-09-22 06:09:07  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:09:07  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:09:07 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [/InfyGo] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} ... (431 bytes)]] with root cause
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} ... (431 bytes)]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:125)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:751)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:352)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 06:13:50  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:14:29  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 06:14:29  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 06:14:29  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632291269151, current=DOWN, previous=UP]
2021-09-22 06:14:29  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:14:29  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:14:29  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:14:29  INFO [RMI TCP Connection(14)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 06:14:29  INFO [RMI TCP Connection(14)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 06:14:29  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 06:14:32  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 06:14:32  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 06:14:32  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 06:14:43  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 15840 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 06:14:43  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 06:14:43  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 06:14:43  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 06:14:45  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 06:14:45  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 213 ms. Found 1 JPA repository interfaces.
2021-09-22 06:14:45  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 06:14:46  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 06:14:46  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 06:14:46  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 06:14:47  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 06:14:47  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 06:14:47  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3143 ms
2021-09-22 06:14:47  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 06:14:47  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 06:14:47  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 06:14:47  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 06:14:48  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 06:14:48  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 06:14:49  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 06:14:49  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:14:50  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:14:50  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:14:50  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:14:50  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:14:50  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 06:14:51  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 06:14:51  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 06:14:51  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 06:14:51  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 06:14:51  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 06:14:51  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 06:14:51  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632291292931 with initial instances count: 4
2021-09-22 06:14:52  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 06:14:52  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632291292939, current=UP, previous=STARTING]
2021-09-22 06:14:52  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:14:52  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:14:53  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path '/InfyGo'
2021-09-22 06:14:53  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 06:14:53  INFO [RMI TCP Connection(1)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 06:14:53  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 06:14:53  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 3 ms
2021-09-22 06:14:53  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.139 seconds (JVM running for 12.71)
2021-09-22 06:15:01  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:15:01  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:15:01 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InfyGo].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [/InfyGo] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} ... (431 bytes)]] with root cause
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} ... (431 bytes)]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:125)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 06:19:34  INFO [RMI TCP Connection(15)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 06:19:34  INFO [RMI TCP Connection(15)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 06:19:34  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632291574324, current=DOWN, previous=UP]
2021-09-22 06:19:34  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:19:34  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:19:34  INFO [RMI TCP Connection(15)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:19:34  INFO [RMI TCP Connection(15)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 06:19:34  INFO [RMI TCP Connection(15)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 06:19:34  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 06:19:37  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 06:19:37  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 06:19:37  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 06:19:59  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 15524 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 06:19:59  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 06:19:59  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 06:19:59  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 06:20:01  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 06:20:01  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 317 ms. Found 1 JPA repository interfaces.
2021-09-22 06:20:02  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 06:20:03  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 06:20:03  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 06:20:03  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 06:20:03  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 06:20:03  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 06:20:03  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 4783 ms
2021-09-22 06:20:04  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 06:20:04  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 06:20:04  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 06:20:05  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 06:20:06  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 06:20:06  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 06:20:07  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 06:20:07  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:20:08  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:20:08  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:20:08  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:20:08  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:20:08  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 06:20:10  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 06:20:10  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 06:20:10  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 06:20:10  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 06:20:10  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 06:20:10  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 81 ms
2021-09-22 06:20:10  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 06:20:11  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 06:20:11  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 06:20:11  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 06:20:11  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 06:20:11  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632291612438 with initial instances count: 2
2021-09-22 06:20:12  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 06:20:12  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632291612444, current=UP, previous=STARTING]
2021-09-22 06:20:12  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:20:12  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:20:12  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 06:20:12  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 06:20:12  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 15.732 seconds (JVM running for 17.684)
2021-09-22 06:21:01  INFO [http-nio-4545-exec-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:21:01  INFO [http-nio-4545-exec-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:21:01  WARN [http-nio-4545-exec-3] org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [logException] - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: class java.util.LinkedHashMap cannot be cast to class java.lang.String (java.util.LinkedHashMap and java.lang.String are in module java.base of loader 'bootstrap'); nested exception is com.fasterxml.jackson.databind.JsonMappingException: class java.util.LinkedHashMap cannot be cast to class java.lang.String (java.util.LinkedHashMap and java.lang.String are in module java.base of loader 'bootstrap') (through reference chain: com.infy.infygo.flight.dto.SearchFlights["bookinglist"]->java.util.ArrayList[0])]
2021-09-22 06:25:12  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:30:12  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:35:12  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:40:12  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:41:36  INFO [RMI TCP Connection(37)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 06:41:36  INFO [RMI TCP Connection(37)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 06:41:36  INFO [RMI TCP Connection(37)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632292896936, current=DOWN, previous=UP]
2021-09-22 06:41:36  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:41:36  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:41:36  INFO [RMI TCP Connection(37)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:41:36  INFO [RMI TCP Connection(37)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 06:41:36  INFO [RMI TCP Connection(37)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 06:41:36  INFO [RMI TCP Connection(37)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 06:41:40  INFO [RMI TCP Connection(37)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 06:41:40  INFO [RMI TCP Connection(37)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 06:41:40  INFO [RMI TCP Connection(37)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 06:41:47  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 14620 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 06:41:47  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 06:41:47  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 06:41:47  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 06:41:49  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 06:41:49  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 265 ms. Found 1 JPA repository interfaces.
2021-09-22 06:41:50  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 06:41:50  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 06:41:50  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 06:41:50  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 06:41:51  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 06:41:51  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 06:41:51  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3588 ms
2021-09-22 06:41:51  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 06:41:51  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 06:41:52  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 06:41:52  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 06:41:52  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 06:41:52  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 06:41:54  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 06:41:54  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 06:41:54  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:41:54  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:41:54  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 06:41:54  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 06:41:54  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 06:41:56  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 06:41:56  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 06:41:56  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 06:41:56  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 06:41:56  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 06:41:56  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 06:41:56  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 06:41:56  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 06:41:56  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632292917593 with initial instances count: 4
2021-09-22 06:41:57  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 06:41:57  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632292917598, current=UP, previous=STARTING]
2021-09-22 06:41:57  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 06:41:57  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 06:41:57  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 06:41:57  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 06:41:57  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.726 seconds (JVM running for 13.069)
2021-09-22 06:41:58  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 06:41:58  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 06:41:58  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 06:42:52  INFO [http-nio-4545-exec-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:42:53  INFO [http-nio-4545-exec-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 06:42:53 ERROR [http-nio-4545-exec-3] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.RestClientException: Error while extracting response for type [class java.util.LinkedHashMap] and content type [application/json]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.LinkedHashMap<java.lang.Object,java.lang.Object>` from Array value (token `JsonToken.START_ARRAY`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.LinkedHashMap<java.lang.Object,java.lang.Object>` from Array value (token `JsonToken.START_ARRAY`)
 at [Source: (PushbackInputStream); line: 1, column: 1]] with root cause
com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.LinkedHashMap<java.lang.Object,java.lang.Object>` from Array value (token `JsonToken.START_ARRAY`)
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1601)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(StdDeserializer.java:222)
	at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:447)
	at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:32)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:322)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4593)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3601)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:378)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:342)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:105)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:778)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 06:46:57  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:51:57  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 06:56:57  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:00:09  INFO [RMI TCP Connection(28)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 07:00:09  INFO [RMI TCP Connection(28)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 07:00:09  INFO [RMI TCP Connection(28)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294009552, current=DOWN, previous=UP]
2021-09-22 07:00:09  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:00:09  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:00:09  INFO [RMI TCP Connection(28)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:00:09  INFO [RMI TCP Connection(28)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 07:00:09  INFO [RMI TCP Connection(28)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 07:00:09  INFO [RMI TCP Connection(28)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 07:00:12  INFO [RMI TCP Connection(28)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 07:00:12  INFO [RMI TCP Connection(28)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 07:00:13  INFO [RMI TCP Connection(28)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 07:00:19  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 10004 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 07:00:19  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 07:00:19  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 07:00:19  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 07:00:21  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 07:00:21  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 226 ms. Found 1 JPA repository interfaces.
2021-09-22 07:00:21  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 07:00:22  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 07:00:22  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 07:00:22  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 07:00:23  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 07:00:23  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 07:00:23  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3382 ms
2021-09-22 07:00:23  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 07:00:23  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 07:00:23  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 07:00:23  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 07:00:24  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 07:00:24  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 07:00:25  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 07:00:25  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:00:26  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:00:26  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:00:26  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:00:26  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:00:26  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 07:00:27  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 07:00:27  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 07:00:27  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 07:00:27  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 07:00:27  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 07:00:27  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 4 ms
2021-09-22 07:00:27  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 07:00:28  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 07:00:28  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 07:00:28  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 07:00:28  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 07:00:28  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632294029372 with initial instances count: 3
2021-09-22 07:00:29  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 07:00:29  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294029377, current=UP, previous=STARTING]
2021-09-22 07:00:29  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:00:29  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:00:29  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 07:00:29  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 07:00:29  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.724 seconds (JVM running for 12.986)
2021-09-22 07:00:40 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IndexOutOfBoundsException: Index: 0] with root cause
java.lang.IndexOutOfBoundsException: Index: 0
	at java.base/java.util.Collections$EmptyList.get(Collections.java:4553)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 07:03:14  INFO [http-nio-4545-exec-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:03:14  INFO [http-nio-4545-exec-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:03:14 ERROR [http-nio-4545-exec-8] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:03:14.317+00:00","status":404,"error":"Not Found","path":"/book/passengerList"}]] with root cause
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:03:14.317+00:00","status":404,"error":"Not Found","path":"/book/passengerList"}]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:125)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 07:05:29  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:06:19  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 07:06:19  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 07:06:19  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294379551, current=DOWN, previous=UP]
2021-09-22 07:06:19  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:06:19  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:06:19  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:06:19  INFO [RMI TCP Connection(14)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 07:06:19  INFO [RMI TCP Connection(14)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 07:06:19  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 07:06:22  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 07:06:22  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 07:06:23  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 07:06:29  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 4740 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 07:06:29  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 07:06:29  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 07:06:29  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 07:06:31  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 07:06:31  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 227 ms. Found 1 JPA repository interfaces.
2021-09-22 07:06:31  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 07:06:32  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 07:06:32  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 07:06:32  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 07:06:33  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 07:06:33  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 07:06:33  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3417 ms
2021-09-22 07:06:33  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 07:06:33  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 07:06:33  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 07:06:34  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 07:06:34  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 07:06:34  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 07:06:35  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 07:06:35  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:06:36  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:06:36  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:06:36  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:06:36  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:06:36  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 07:06:37  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 07:06:37  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 07:06:37  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 07:06:37  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 07:06:38  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 07:06:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 07:06:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 07:06:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 07:06:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632294399306 with initial instances count: 3
2021-09-22 07:06:39  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 07:06:39  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294399312, current=UP, previous=STARTING]
2021-09-22 07:06:39  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:06:39  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:06:39  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 07:06:39  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 07:06:39  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.508 seconds (JVM running for 12.788)
2021-09-22 07:06:40  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 07:06:40  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 07:06:40  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 3 ms
2021-09-22 07:06:53  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:06:53  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:06:53 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:06:53.494+00:00","status":404,"error":"Not Found","path":"/book/passengerList/"}]] with root cause
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:06:53.494+00:00","status":404,"error":"Not Found","path":"/book/passengerList/"}]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:125)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 07:06:55  INFO [http-nio-4545-exec-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:06:55  INFO [http-nio-4545-exec-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:06:55 ERROR [http-nio-4545-exec-3] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:06:55.272+00:00","status":404,"error":"Not Found","path":"/book/passengerList/"}]] with root cause
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:06:55.272+00:00","status":404,"error":"Not Found","path":"/book/passengerList/"}]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:125)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 07:11:05  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 07:11:05  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 07:11:05  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294665432, current=DOWN, previous=UP]
2021-09-22 07:11:05  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:11:05  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:11:05  INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:11:05  INFO [RMI TCP Connection(14)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 07:11:05  INFO [RMI TCP Connection(14)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 07:11:05  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 07:11:08  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 07:11:08  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 07:11:08  INFO [RMI TCP Connection(14)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 07:11:20  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 3372 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 07:11:20  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 07:11:20  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 07:11:20  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 07:11:21  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 07:11:22  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 223 ms. Found 1 JPA repository interfaces.
2021-09-22 07:11:22  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 07:11:23  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 07:11:23  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 07:11:23  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 07:11:23  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 07:11:23  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 07:11:23  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3535 ms
2021-09-22 07:11:24  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 07:11:24  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 07:11:24  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 07:11:24  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 07:11:25  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 07:11:25  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 07:11:26  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 07:11:26  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:11:27  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:11:27  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:11:27  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:11:27  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:11:27  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 07:11:28  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 07:11:28  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 07:11:28  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 07:11:28  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 07:11:28  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 07:11:28  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 07:11:28  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632294689951 with initial instances count: 4
2021-09-22 07:11:29  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 07:11:29  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294689957, current=UP, previous=STARTING]
2021-09-22 07:11:29  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:11:30  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:11:30  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 07:11:30  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 07:11:30  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.89 seconds (JVM running for 13.462)
2021-09-22 07:11:30  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 07:11:30  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 07:11:30  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 07:11:37  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:11:37  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:11:37 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:11:37.899+00:00","status":404,"error":"Not Found","path":"/book/passengerList/"}]] with root cause
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:11:37.899+00:00","status":404,"error":"Not Found","path":"/book/passengerList/"}]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:125)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 07:12:12  INFO [RMI TCP Connection(9)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 07:12:12  INFO [RMI TCP Connection(9)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 07:12:12  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294732415, current=DOWN, previous=UP]
2021-09-22 07:12:12  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:12:12  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:12:12  INFO [RMI TCP Connection(9)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:12:12  INFO [RMI TCP Connection(9)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 07:12:12  INFO [RMI TCP Connection(9)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 07:12:12  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 07:12:15  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 07:12:15  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 07:12:15  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 07:12:27  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 9084 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 07:12:27  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 07:12:27  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 07:12:27  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 07:12:28  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 07:12:29  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 227 ms. Found 1 JPA repository interfaces.
2021-09-22 07:12:29  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 07:12:30  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 07:12:30  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 07:12:30  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 07:12:30  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 07:12:30  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 07:12:30  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3343 ms
2021-09-22 07:12:31  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 07:12:31  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 07:12:31  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 07:12:31  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 07:12:32  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 07:12:32  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 07:12:33  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 07:12:33  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:12:33  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:12:33  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:12:34  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:12:34  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:12:34  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 07:12:35  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 07:12:35  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 07:12:35  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 07:12:35  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 07:12:35  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 07:12:35  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 07:12:35  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 07:12:35  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 07:12:35  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 07:12:36  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 07:12:36  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 07:12:36  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 4 ms
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632294756935 with initial instances count: 3
2021-09-22 07:12:36  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 07:12:36  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294756942, current=UP, previous=STARTING]
2021-09-22 07:12:36  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:12:36  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:12:36  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 07:12:36  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 07:12:37  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.579 seconds (JVM running for 13.112)
2021-09-22 07:12:48  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:12:48  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:13:47  INFO [RMI TCP Connection(9)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 07:13:47  INFO [RMI TCP Connection(9)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 07:13:47  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294827990, current=DOWN, previous=UP]
2021-09-22 07:13:47  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:13:47  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:13:48  INFO [RMI TCP Connection(9)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:13:48  INFO [RMI TCP Connection(9)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 07:13:48  INFO [RMI TCP Connection(9)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 07:13:48  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 07:13:51  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 07:13:51  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 07:13:51  INFO [RMI TCP Connection(9)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 07:13:59  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 2152 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 07:13:59  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 07:13:59  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 07:13:59  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 07:14:01  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 07:14:01  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 255 ms. Found 1 JPA repository interfaces.
2021-09-22 07:14:01  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 07:14:02  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 07:14:02  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 07:14:02  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 07:14:02  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 07:14:02  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 07:14:02  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3455 ms
2021-09-22 07:14:03  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 07:14:03  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 07:14:03  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 07:14:03  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 07:14:04  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 07:14:04  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 07:14:05  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 07:14:05  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:14:06  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:14:06  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:14:06  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:14:06  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:14:06  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 07:14:07  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 07:14:07  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 07:14:07  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 07:14:07  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 26 ms
2021-09-22 07:14:07  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 07:14:07  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 07:14:07  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 07:14:07  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 07:14:07  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 07:14:07  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 07:14:08  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 07:14:09  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 07:14:09  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 07:14:09  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 07:14:09  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632294849141 with initial instances count: 3
2021-09-22 07:14:09  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 07:14:09  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632294849146, current=UP, previous=STARTING]
2021-09-22 07:14:09  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:14:09  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:14:09  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 07:14:09  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 07:14:09  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.753 seconds (JVM running for 12.996)
2021-09-22 07:14:19  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:14:19  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:14:19 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:14:19.167+00:00","status":404,"error":"Not Found","path":"/"}]] with root cause
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2021-09-22T07:14:19.167+00:00","status":404,"error":"Not Found","path":"/"}]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:125)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:751)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:352)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 07:19:08  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:22:30  INFO [RMI TCP Connection(18)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 07:22:30  INFO [RMI TCP Connection(18)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 07:22:30  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632295350969, current=DOWN, previous=UP]
2021-09-22 07:22:30  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:22:30  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:22:31  INFO [RMI TCP Connection(18)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:22:31  INFO [RMI TCP Connection(18)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 07:22:31  INFO [RMI TCP Connection(18)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 07:22:31  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 07:22:34  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 07:22:34  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 07:22:34  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 07:22:43  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 6060 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 07:22:43  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 07:22:43  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 07:22:43  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 07:22:45  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 07:22:45  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 237 ms. Found 1 JPA repository interfaces.
2021-09-22 07:22:45  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 07:22:46  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 07:22:46  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 07:22:46  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 07:22:46  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 07:22:46  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 07:22:46  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3560 ms
2021-09-22 07:22:47  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 07:22:47  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 07:22:47  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 07:22:47  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 07:22:48  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 07:22:48  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 07:22:49  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 07:22:49  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:22:50  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:22:50  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:22:50  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:22:50  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:22:50  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 07:22:51  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 07:22:51  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 07:22:51  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 07:22:51  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 07:22:51  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 07:22:51  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 07:22:51  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632295372918 with initial instances count: 4
2021-09-22 07:22:52  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 07:22:52  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632295372924, current=UP, previous=STARTING]
2021-09-22 07:22:52  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:22:52  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:22:52  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 07:22:52  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 07:22:53  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 12.638 seconds (JVM running for 13.897)
2021-09-22 07:22:53  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 07:22:53  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 07:22:53  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 07:23:15  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:23:15  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:23:15  WARN [http-nio-4545-exec-2] org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [logException] - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: class java.util.LinkedHashMap cannot be cast to class java.lang.String (java.util.LinkedHashMap and java.lang.String are in module java.base of loader 'bootstrap'); nested exception is com.fasterxml.jackson.databind.JsonMappingException: class java.util.LinkedHashMap cannot be cast to class java.lang.String (java.util.LinkedHashMap and java.lang.String are in module java.base of loader 'bootstrap') (through reference chain: com.infy.infygo.flight.dto.SearchFlights["bookinglist"]->java.util.ArrayList[0])]
2021-09-22 07:27:52  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:32:52  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:37:52  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:42:52  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:45:55  INFO [RMI TCP Connection(35)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 07:45:55  INFO [RMI TCP Connection(35)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 07:45:55  INFO [RMI TCP Connection(35)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632296755489, current=DOWN, previous=UP]
2021-09-22 07:45:55  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:45:55  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:45:55  INFO [RMI TCP Connection(35)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:45:55  INFO [RMI TCP Connection(35)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 07:45:55  INFO [RMI TCP Connection(35)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 07:45:55  INFO [RMI TCP Connection(35)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 07:45:58  INFO [RMI TCP Connection(35)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 07:45:58  INFO [RMI TCP Connection(35)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 07:45:58  INFO [RMI TCP Connection(35)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 07:46:05  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 7916 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 07:46:05  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 07:46:05  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 07:46:05  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 07:46:07  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 07:46:07  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 255 ms. Found 1 JPA repository interfaces.
2021-09-22 07:46:07  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 07:46:08  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 07:46:08  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 07:46:08  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 07:46:08  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 07:46:08  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 07:46:08  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3089 ms
2021-09-22 07:46:09  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 07:46:09  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 07:46:09  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 07:46:09  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 07:46:10  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 07:46:10  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 07:46:11  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 07:46:11  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 07:46:12  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:46:12  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:46:12  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 07:46:12  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 07:46:12  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 07:46:13  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 07:46:13  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 07:46:13  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 07:46:13  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 07:46:13  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 07:46:13  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 07:46:13  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 07:46:13  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 07:46:13  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 07:46:13  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632296774850 with initial instances count: 3
2021-09-22 07:46:14  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 07:46:14  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632296774855, current=UP, previous=STARTING]
2021-09-22 07:46:14  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 07:46:14  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 07:46:14  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 07:46:14  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 07:46:15  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.106 seconds (JVM running for 12.496)
2021-09-22 07:46:42  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:46:43  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 07:46:43 ERROR [http-nio-4545-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.RestClientException: Error while extracting response for type [class com.infy.infygo.flight.dto.SearchFlights] and content type [application/json]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.infy.infygo.flight.dto.SearchFlights` from Array value (token `JsonToken.START_ARRAY`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `com.infy.infygo.flight.dto.SearchFlights` from Array value (token `JsonToken.START_ARRAY`)
 at [Source: (PushbackInputStream); line: 1, column: 1]] with root cause
com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `com.infy.infygo.flight.dto.SearchFlights` from Array value (token `JsonToken.START_ARRAY`)
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1601)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1322)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeFromArray(BeanDeserializer.java:640)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:221)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:197)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:322)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4593)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3601)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:378)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:342)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:105)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:778)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 07:51:14  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 07:56:14  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:01:14  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:06:14  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:08:03  INFO [RMI TCP Connection(31)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 08:08:03  INFO [RMI TCP Connection(31)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 08:08:03  INFO [RMI TCP Connection(31)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632298083787, current=DOWN, previous=UP]
2021-09-22 08:08:03  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 08:08:03  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 08:08:03  INFO [RMI TCP Connection(31)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 08:08:03  INFO [RMI TCP Connection(31)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 08:08:03  INFO [RMI TCP Connection(31)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 08:08:03  INFO [RMI TCP Connection(31)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 08:08:06  INFO [RMI TCP Connection(31)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 08:08:06  INFO [RMI TCP Connection(31)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 08:08:07  INFO [RMI TCP Connection(31)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 08:08:13  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 936 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 08:08:13  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 08:08:13  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 08:08:13  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 08:08:15  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 08:08:15  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 262 ms. Found 1 JPA repository interfaces.
2021-09-22 08:08:15  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 08:08:16  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 08:08:16  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 08:08:16  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 08:08:16  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 08:08:16  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 08:08:16  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3223 ms
2021-09-22 08:08:17  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 08:08:17  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 08:08:17  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 08:08:17  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 08:08:18  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 08:08:18  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 08:08:19  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 08:08:19  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 08:08:20  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 08:08:20  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 08:08:20  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 08:08:20  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 08:08:20  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 08:08:21  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 08:08:21  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 08:08:21  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 08:08:21  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 08:08:21  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 08:08:21  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 08:08:21  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 08:08:21  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 08:08:21  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632298102717 with initial instances count: 4
2021-09-22 08:08:22  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 08:08:22  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632298102722, current=UP, previous=STARTING]
2021-09-22 08:08:22  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 08:08:22  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 08:08:22  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 08:08:22  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 08:08:22  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 10.967 seconds (JVM running for 12.245)
2021-09-22 08:08:23  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 08:08:23  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 08:08:23  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 08:09:23  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:09:23  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:13:22  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:18:22  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:23:22  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:27:17  INFO [RMI TCP Connection(27)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 08:27:17  INFO [RMI TCP Connection(27)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 08:27:17  INFO [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632299237346, current=DOWN, previous=UP]
2021-09-22 08:27:17  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 08:27:17  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 08:27:17  INFO [RMI TCP Connection(27)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 08:27:17  INFO [RMI TCP Connection(27)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 08:27:17  INFO [RMI TCP Connection(27)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 08:27:17  INFO [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 08:27:20  INFO [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 08:27:20  INFO [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 08:27:20  INFO [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 08:27:33  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 8448 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 08:27:33  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 08:27:33  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 08:27:33  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 08:27:34  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 08:27:35  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 240 ms. Found 1 JPA repository interfaces.
2021-09-22 08:27:35  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 08:27:36  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 08:27:36  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 08:27:36  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 08:27:36  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 08:27:36  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 08:27:36  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3605 ms
2021-09-22 08:27:37  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 08:27:37  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 08:27:37  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 08:27:37  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 08:27:38  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 08:27:38  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 08:27:39  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 08:27:39  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 08:27:40  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 08:27:40  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 08:27:40  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 08:27:40  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 08:27:40  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 08:27:41  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 08:27:41  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 08:27:41  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 08:27:41  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 08:27:42  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 08:27:42  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 08:27:42  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 08:27:42  INFO [RMI TCP Connection(1)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 08:27:42  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 08:27:42  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 3 ms
2021-09-22 08:27:42  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 08:27:42  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632299263427 with initial instances count: 3
2021-09-22 08:27:43  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 08:27:43  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632299263432, current=UP, previous=STARTING]
2021-09-22 08:27:43  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 08:27:43  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 08:27:43  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 08:27:43  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 08:27:43  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 12.083 seconds (JVM running for 13.709)
2021-09-22 08:27:51  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:27:51  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:27:51  INFO [http-nio-4545-exec-1] com.netflix.config.ChainedDynamicProperty [checkAndFlip] - Flipping property: BookingMS.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-09-22 08:27:51  INFO [http-nio-4545-exec-1] com.netflix.loadbalancer.BaseLoadBalancer [initWithConfig] - Client: BookingMS instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BookingMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-09-22 08:27:51  INFO [http-nio-4545-exec-1] com.netflix.loadbalancer.DynamicServerListLoadBalancer [enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
2021-09-22 08:27:51  INFO [http-nio-4545-exec-1] com.netflix.loadbalancer.DynamicServerListLoadBalancer [restOfInit] - DynamicServerListLoadBalancer for client BookingMS initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BookingMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.netflix.loadbalancer.ConfigurationBasedServerList@226ba07c
2021-09-22 08:27:52 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:28:00  INFO [http-nio-4545-exec-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:00  INFO [http-nio-4545-exec-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:00 ERROR [http-nio-4545-exec-4] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:28:01  INFO [http-nio-4545-exec-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:01  INFO [http-nio-4545-exec-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:01 ERROR [http-nio-4545-exec-6] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:28:02  INFO [http-nio-4545-exec-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:02  INFO [http-nio-4545-exec-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:02 ERROR [http-nio-4545-exec-8] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:28:02  INFO [http-nio-4545-exec-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:02  INFO [http-nio-4545-exec-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:02 ERROR [http-nio-4545-exec-10] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:28:03  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:03  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:03 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:28:03  INFO [http-nio-4545-exec-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:03  INFO [http-nio-4545-exec-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:03 ERROR [http-nio-4545-exec-4] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:28:04  INFO [http-nio-4545-exec-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:04  INFO [http-nio-4545-exec-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:04 ERROR [http-nio-4545-exec-6] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:28:04  INFO [http-nio-4545-exec-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:04  INFO [http-nio-4545-exec-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:04 ERROR [http-nio-4545-exec-8] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:28:05  INFO [http-nio-4545-exec-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:05  INFO [http-nio-4545-exec-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:28:05 ERROR [http-nio-4545-exec-10] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:32:14  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:32:14  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:32:14 ERROR [http-nio-4545-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:32:17  INFO [http-nio-4545-exec-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:32:17  INFO [http-nio-4545-exec-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:32:17 ERROR [http-nio-4545-exec-4] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:32:43  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:36:05  INFO [RMI TCP Connection(18)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 08:36:05  INFO [RMI TCP Connection(18)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 08:36:05  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632299765780, current=DOWN, previous=UP]
2021-09-22 08:36:05  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 08:36:05  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 08:36:05  INFO [Thread-4] com.netflix.loadbalancer.PollingServerListUpdater [run] - Shutting down the Executor Pool for PollingServerListUpdater
2021-09-22 08:36:05  INFO [RMI TCP Connection(18)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 08:36:05  INFO [RMI TCP Connection(18)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 08:36:05  INFO [RMI TCP Connection(18)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 08:36:05  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 08:36:08  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 08:36:08  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 08:36:09  INFO [RMI TCP Connection(18)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 08:36:21  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 6516 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 08:36:21  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 08:36:21  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 08:36:21  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 08:36:23  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 08:36:23  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 221 ms. Found 1 JPA repository interfaces.
2021-09-22 08:36:23  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 08:36:24  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 08:36:24  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 08:36:24  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 08:36:25  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 08:36:25  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 08:36:25  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3618 ms
2021-09-22 08:36:25  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 08:36:25  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 08:36:25  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 08:36:26  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 08:36:26  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 08:36:26  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 08:36:27  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 08:36:27  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 08:36:28  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 08:36:28  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 08:36:28  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 08:36:28  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 08:36:28  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 08:36:29  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 08:36:29  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 08:36:29  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 08:36:29  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 08:36:30  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 08:36:30  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 08:36:30  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 08:36:30  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 08:36:30  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 08:36:31  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 08:36:31  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 08:36:31  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 3 ms
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632299791652 with initial instances count: 3
2021-09-22 08:36:31  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 08:36:31  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632299791657, current=UP, previous=STARTING]
2021-09-22 08:36:31  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 08:36:31  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 08:36:31  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 08:36:31  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 08:36:31  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 12.315 seconds (JVM running for 13.668)
2021-09-22 08:36:37  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:36:37  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:36:37  INFO [http-nio-4545-exec-2] com.netflix.config.ChainedDynamicProperty [checkAndFlip] - Flipping property: BOOKINGMS.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-09-22 08:36:37  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.BaseLoadBalancer [initWithConfig] - Client: BOOKINGMS instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BOOKINGMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-09-22 08:36:38  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.DynamicServerListLoadBalancer [enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
2021-09-22 08:36:38  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.DynamicServerListLoadBalancer [restOfInit] - DynamicServerListLoadBalancer for client BOOKINGMS initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BOOKINGMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.netflix.loadbalancer.ConfigurationBasedServerList@91cf4d6
2021-09-22 08:36:38 ERROR [http-nio-4545-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BOOKINGMS] with root cause
java.lang.IllegalStateException: No instances available for BOOKINGMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:36:42  INFO [http-nio-4545-exec-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:36:42  INFO [http-nio-4545-exec-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:36:42 ERROR [http-nio-4545-exec-5] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BOOKINGMS] with root cause
java.lang.IllegalStateException: No instances available for BOOKINGMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:38:31  INFO [http-nio-4545-exec-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:38:31  INFO [http-nio-4545-exec-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:38:31 ERROR [http-nio-4545-exec-6] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BOOKINGMS] with root cause
java.lang.IllegalStateException: No instances available for BOOKINGMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:38:32  INFO [http-nio-4545-exec-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:38:32  INFO [http-nio-4545-exec-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:38:32 ERROR [http-nio-4545-exec-8] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BOOKINGMS] with root cause
java.lang.IllegalStateException: No instances available for BOOKINGMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:38:37  INFO [RMI TCP Connection(11)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 08:38:37  INFO [RMI TCP Connection(11)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 08:38:37  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632299917017, current=DOWN, previous=UP]
2021-09-22 08:38:37  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 08:38:37  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 08:38:37  INFO [Thread-4] com.netflix.loadbalancer.PollingServerListUpdater [run] - Shutting down the Executor Pool for PollingServerListUpdater
2021-09-22 08:38:37  INFO [RMI TCP Connection(11)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 08:38:37  INFO [RMI TCP Connection(11)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 08:38:37  INFO [RMI TCP Connection(11)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 08:38:37  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 08:38:40  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 08:38:40  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 08:38:40  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 08:38:52  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 2616 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 08:38:52  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 08:38:52  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 08:38:52  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 08:38:54  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 08:38:54  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 208 ms. Found 1 JPA repository interfaces.
2021-09-22 08:38:55  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 08:38:55  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 08:38:55  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 08:38:55  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 08:38:56  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 08:38:56  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 08:38:56  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3537 ms
2021-09-22 08:38:56  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 08:38:56  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 08:38:57  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 08:38:57  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 08:38:57  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 08:38:57  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 08:38:58  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 08:38:58  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 08:38:59  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 08:38:59  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 08:38:59  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 08:38:59  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 08:38:59  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 08:39:00  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 08:39:00  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 08:39:00  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 08:39:00  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 08:39:01  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 08:39:01  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 08:39:01  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 08:39:01  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 08:39:01  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632299942318 with initial instances count: 3
2021-09-22 08:39:02  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 08:39:02  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632299942324, current=UP, previous=STARTING]
2021-09-22 08:39:02  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 08:39:02  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 08:39:02  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 08:39:02  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 08:39:02  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.524 seconds (JVM running for 13.075)
2021-09-22 08:39:02  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 08:39:02  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 08:39:02  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 3 ms
2021-09-22 08:41:05  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:41:05  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 08:41:05  INFO [http-nio-4545-exec-2] com.netflix.config.ChainedDynamicProperty [checkAndFlip] - Flipping property: BOOKINGMS.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-09-22 08:41:05  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.BaseLoadBalancer [initWithConfig] - Client: BOOKINGMS instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BOOKINGMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-09-22 08:41:05  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.DynamicServerListLoadBalancer [enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
2021-09-22 08:41:05  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.DynamicServerListLoadBalancer [restOfInit] - DynamicServerListLoadBalancer for client BOOKINGMS initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BOOKINGMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.netflix.loadbalancer.ConfigurationBasedServerList@517312bf
2021-09-22 08:41:05 ERROR [http-nio-4545-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BOOKINGMS] with root cause
java.lang.IllegalStateException: No instances available for BOOKINGMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 08:44:02  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:49:02  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:54:02  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 08:59:02  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:00:30  INFO [RMI TCP Connection(32)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 09:00:30  INFO [RMI TCP Connection(32)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 09:00:30  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632301230333, current=DOWN, previous=UP]
2021-09-22 09:00:30  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:00:30  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:00:30  INFO [Thread-4] com.netflix.loadbalancer.PollingServerListUpdater [run] - Shutting down the Executor Pool for PollingServerListUpdater
2021-09-22 09:00:30  INFO [RMI TCP Connection(32)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:00:30  INFO [RMI TCP Connection(32)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 09:00:30  INFO [RMI TCP Connection(32)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 09:00:30  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 09:00:33  WARN [DiscoveryClient-0] com.netflix.discovery.TimedSupervisorTask [run] - task supervisor shutting down, can't accept the task
2021-09-22 09:00:33  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 09:00:33  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 09:00:33  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 09:00:44  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 1196 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 09:00:44  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 09:00:44  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 09:00:44  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 09:00:46  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 09:00:46  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 240 ms. Found 1 JPA repository interfaces.
2021-09-22 09:00:47  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 09:00:47  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 09:00:47  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 09:00:47  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 09:00:48  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 09:00:48  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 09:00:48  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3699 ms
2021-09-22 09:00:48  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 09:00:48  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 09:00:49  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 09:00:49  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 09:00:49  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 09:00:49  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 09:00:51  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 09:00:51  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:00:52  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 09:00:52  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 09:00:52  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 09:00:52  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 09:00:52  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 09:00:53  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 09:00:53  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 09:00:53  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 09:00:53  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 09:00:53  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 09:00:53  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 09:00:53  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 09:00:54  INFO [RMI TCP Connection(1)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 09:00:54  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 09:00:54  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 4 ms
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 09:00:54  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 09:00:55  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 09:00:55  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 09:00:55  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632301255030 with initial instances count: 4
2021-09-22 09:00:55  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 09:00:55  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632301255035, current=UP, previous=STARTING]
2021-09-22 09:00:55  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:00:55  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:00:55  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 09:00:55  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 09:00:55  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 12.262 seconds (JVM running for 13.698)
2021-09-22 09:01:33  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:01:33  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:01:33  INFO [http-nio-4545-exec-1] com.netflix.config.ChainedDynamicProperty [checkAndFlip] - Flipping property: BookingMS.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-09-22 09:01:34  INFO [http-nio-4545-exec-1] com.netflix.loadbalancer.BaseLoadBalancer [initWithConfig] - Client: BookingMS instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BookingMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-09-22 09:01:34  INFO [http-nio-4545-exec-1] com.netflix.loadbalancer.DynamicServerListLoadBalancer [enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
2021-09-22 09:01:34  INFO [http-nio-4545-exec-1] com.netflix.loadbalancer.DynamicServerListLoadBalancer [restOfInit] - DynamicServerListLoadBalancer for client BookingMS initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BookingMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.netflix.loadbalancer.ConfigurationBasedServerList@6d351f8f
2021-09-22 09:01:34 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 09:01:41  INFO [http-nio-4545-exec-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:01:41  INFO [http-nio-4545-exec-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:01:41 ERROR [http-nio-4545-exec-5] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 09:01:42  INFO [http-nio-4545-exec-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:01:42  INFO [http-nio-4545-exec-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:01:42 ERROR [http-nio-4545-exec-6] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 09:01:53  INFO [http-nio-4545-exec-7] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:01:53  INFO [http-nio-4545-exec-7] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:01:53 ERROR [http-nio-4545-exec-7] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 09:05:54  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:06:02  INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 09:06:02  INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 09:06:02  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632301562314, current=DOWN, previous=UP]
2021-09-22 09:06:02  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:06:02  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:06:02  INFO [Thread-4] com.netflix.loadbalancer.PollingServerListUpdater [run] - Shutting down the Executor Pool for PollingServerListUpdater
2021-09-22 09:06:02  INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:06:02  INFO [RMI TCP Connection(12)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 09:06:02  INFO [RMI TCP Connection(12)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 09:06:02  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 09:06:05  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 09:06:05  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 09:06:05  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 09:06:12  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 10560 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 09:06:12  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 09:06:13  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 09:06:13  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 09:06:14  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 09:06:14  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 232 ms. Found 1 JPA repository interfaces.
2021-09-22 09:06:15  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 09:06:15  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 09:06:15  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 09:06:15  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 09:06:16  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 09:06:16  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 09:06:16  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3492 ms
2021-09-22 09:06:16  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 09:06:16  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 09:06:17  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 09:06:17  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 09:06:17  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 09:06:17  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 09:06:18  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 09:06:19  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:06:19  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 09:06:19  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 09:06:19  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 09:06:20  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 09:06:21  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 09:06:21  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 09:06:21  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 09:06:21  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 09:06:21  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 09:06:21  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 09:06:21  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 09:06:21  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 09:06:21  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 09:06:21  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 09:06:21  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632301582742 with initial instances count: 4
2021-09-22 09:06:22  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 09:06:22  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632301582747, current=UP, previous=STARTING]
2021-09-22 09:06:22  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:06:22  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:06:22  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 09:06:22  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 09:06:22  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.918 seconds (JVM running for 13.177)
2021-09-22 09:06:44  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:06:44  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:06:44  WARN [http-nio-4545-exec-2] org.springframework.context.annotation.AnnotationConfigApplicationContext [refresh] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Failed to introspect annotated methods on class org.springframework.cloud.netflix.ribbon.RestClientRibbonConfiguration
2021-09-22 09:06:44 ERROR [http-nio-4545-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Failed to introspect annotated methods on class org.springframework.cloud.netflix.ribbon.RestClientRibbonConfiguration] with root cause
java.lang.ClassNotFoundException: com.netflix.client.RetryHandler
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:636)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:182)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3334)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2446)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:455)
	at org.springframework.core.type.StandardAnnotationMetadata.getAnnotatedMethods(StandardAnnotationMetadata.java:151)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:403)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:326)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:600)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:311)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:133)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:101)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:131)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:142)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:121)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:65)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:193)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:116)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 09:10:11  INFO [RMI TCP Connection(13)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 09:10:11  INFO [RMI TCP Connection(13)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 09:10:11  INFO [RMI TCP Connection(13)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632301811631, current=DOWN, previous=UP]
2021-09-22 09:10:11  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:10:11  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:10:11  INFO [RMI TCP Connection(13)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:10:11  INFO [RMI TCP Connection(13)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 09:10:11  INFO [RMI TCP Connection(13)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 09:10:11  INFO [RMI TCP Connection(13)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 09:10:14  INFO [RMI TCP Connection(13)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 09:10:14  INFO [RMI TCP Connection(13)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 09:10:14  WARN [RMI TCP Connection(13)-127.0.0.1] org.springframework.context.annotation.CommonAnnotationBeanPostProcessor [postProcessBeforeDestruction] - Destroy method on bean with name 'scopedTarget.eurekaClient' threw an exception: java.lang.NoSuchMethodError: 'boolean com.netflix.servo.monitor.Monitors.isObjectRegistered(java.lang.String, java.lang.Object)'
2021-09-22 09:10:21  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 10260 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 09:10:21  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 09:10:21  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 09:10:21  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 09:10:23  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 09:10:23  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 209 ms. Found 1 JPA repository interfaces.
2021-09-22 09:10:23  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 09:10:24  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 09:10:24  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 09:10:24  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 09:10:24  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 09:10:25  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 09:10:25  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3456 ms
2021-09-22 09:10:25  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 09:10:25  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 09:10:25  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 09:10:25  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 09:10:26  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 09:10:26  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 09:10:27  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 09:10:27  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:10:28  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 09:10:28  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 09:10:28  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 09:10:28  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 09:10:28  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 09:10:29  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 09:10:29  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 09:10:29  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 09:10:29  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 09:10:29  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 09:10:29  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 09:10:29  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 09:10:30  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 09:10:30  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 09:10:30  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 3 ms
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 09:10:30  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 09:10:31  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 09:10:31  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 09:10:31  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 09:10:31  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632301831137 with initial instances count: 4
2021-09-22 09:10:31  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 09:10:31  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632301831144, current=UP, previous=STARTING]
2021-09-22 09:10:31  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:10:31  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:10:31  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 09:10:31  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 09:10:31  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.633 seconds (JVM running for 12.987)
2021-09-22 09:10:48  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:10:48  INFO [http-nio-4545-exec-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:10:48  INFO [http-nio-4545-exec-2] com.netflix.config.ChainedDynamicProperty [checkAndFlip] - Flipping property: BookingMS.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-09-22 09:10:48  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.BaseLoadBalancer [initWithConfig] - Client: BookingMS instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BookingMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-09-22 09:10:48  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.DynamicServerListLoadBalancer [enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
2021-09-22 09:10:48  INFO [http-nio-4545-exec-2] com.netflix.loadbalancer.DynamicServerListLoadBalancer [restOfInit] - DynamicServerListLoadBalancer for client BookingMS initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BookingMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.netflix.loadbalancer.ConfigurationBasedServerList@524d5441
2021-09-22 09:10:48 ERROR [http-nio-4545-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 09:15:30  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:20:11  INFO [RMI TCP Connection(19)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 09:20:11  INFO [RMI TCP Connection(19)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 09:20:11  INFO [RMI TCP Connection(19)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632302411036, current=DOWN, previous=UP]
2021-09-22 09:20:11  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:20:11  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:20:11  INFO [Thread-4] com.netflix.loadbalancer.PollingServerListUpdater [run] - Shutting down the Executor Pool for PollingServerListUpdater
2021-09-22 09:20:11  INFO [RMI TCP Connection(19)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:20:11  INFO [RMI TCP Connection(19)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 09:20:11  INFO [RMI TCP Connection(19)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 09:20:11  INFO [RMI TCP Connection(19)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 09:20:14  INFO [RMI TCP Connection(19)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 09:20:14  INFO [RMI TCP Connection(19)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 09:20:14  INFO [RMI TCP Connection(19)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 09:20:25  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 6228 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 09:20:25  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 09:20:25  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 09:20:25  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 09:20:26  WARN [main] org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [refresh] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.infy.infygo.flight.InfygoFlightApplication]; nested exception is java.io.FileNotFoundException: class path resource [org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.class] cannot be opened because it does not exist
2021-09-22 09:20:26  INFO [main] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [logMessage] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-09-22 09:20:26 ERROR [main] org.springframework.boot.SpringApplication [reportFailure] - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.infy.infygo.flight.InfygoFlightApplication]; nested exception is java.io.FileNotFoundException: class path resource [org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:610)
	at org.springframework.context.annotation.ConfigurationClassParser.access$800(ConfigurationClassParser.java:111)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.lambda$processGroupImports$1(ConfigurationClassParser.java:812)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.processGroupImports(ConfigurationClassParser.java:809)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler.process(ConfigurationClassParser.java:780)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:193)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.infy.infygo.flight.InfygoFlightApplication.main(InfygoFlightApplication.java:12)
Caused by: java.io.FileNotFoundException: class path resource [org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:187)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:55)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.createMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:86)
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.getMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:73)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.asSourceClass(ConfigurationClassParser.java:696)
	at org.springframework.context.annotation.ConfigurationClassParser$SourceClass.getRelated(ConfigurationClassParser.java:1090)
	at org.springframework.context.annotation.ConfigurationClassParser$SourceClass.getAnnotationAttributes(ConfigurationClassParser.java:1071)
	at org.springframework.context.annotation.ConfigurationClassParser.collectImports(ConfigurationClassParser.java:549)
	at org.springframework.context.annotation.ConfigurationClassParser.getImports(ConfigurationClassParser.java:522)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:311)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:600)
	... 19 common frames omitted
2021-09-22 09:22:15  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 3736 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 09:22:15  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 09:22:15  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 09:22:15  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 09:22:16  WARN [main] org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [refresh] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.infy.infygo.flight.InfygoFlightApplication]; nested exception is java.io.FileNotFoundException: class path resource [org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.class] cannot be opened because it does not exist
2021-09-22 09:22:16  INFO [main] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [logMessage] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-09-22 09:22:16 ERROR [main] org.springframework.boot.SpringApplication [reportFailure] - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.infy.infygo.flight.InfygoFlightApplication]; nested exception is java.io.FileNotFoundException: class path resource [org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:610)
	at org.springframework.context.annotation.ConfigurationClassParser.access$800(ConfigurationClassParser.java:111)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.lambda$processGroupImports$1(ConfigurationClassParser.java:812)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.processGroupImports(ConfigurationClassParser.java:809)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler.process(ConfigurationClassParser.java:780)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:193)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.infy.infygo.flight.InfygoFlightApplication.main(InfygoFlightApplication.java:12)
Caused by: java.io.FileNotFoundException: class path resource [org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:187)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:55)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.createMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:86)
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.getMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:73)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.asSourceClass(ConfigurationClassParser.java:696)
	at org.springframework.context.annotation.ConfigurationClassParser$SourceClass.getRelated(ConfigurationClassParser.java:1090)
	at org.springframework.context.annotation.ConfigurationClassParser$SourceClass.getAnnotationAttributes(ConfigurationClassParser.java:1071)
	at org.springframework.context.annotation.ConfigurationClassParser.collectImports(ConfigurationClassParser.java:549)
	at org.springframework.context.annotation.ConfigurationClassParser.getImports(ConfigurationClassParser.java:522)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:311)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:600)
	... 19 common frames omitted
2021-09-22 09:23:50  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 10060 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 09:23:50  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 09:23:50  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 09:23:50  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 09:23:52  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 09:23:52  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 218 ms. Found 1 JPA repository interfaces.
2021-09-22 09:23:52  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 09:23:53  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 09:23:53  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 09:23:53  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 09:23:54  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 09:23:54  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 09:23:54  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3649 ms
2021-09-22 09:23:54  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 09:23:54  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 09:23:54  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 09:23:54  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 09:23:55  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 09:23:55  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 09:23:56  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 09:23:56  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:23:57  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 09:23:57  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 09:23:57  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 09:23:57  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 09:23:57  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 09:23:58  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 09:23:58  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 09:23:58  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 09:23:58  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 09:23:59  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 09:23:59  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 09:23:59  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 09:23:59  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 09:23:59  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632302640384 with initial instances count: 3
2021-09-22 09:24:00  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 09:24:00  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632302640389, current=UP, previous=STARTING]
2021-09-22 09:24:00  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:24:00  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:24:00  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 09:24:00  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 09:24:00  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.896 seconds (JVM running for 13.135)
2021-09-22 09:24:00  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 09:24:00  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 09:24:00  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 09:24:13  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:24:13  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:24:13  INFO [http-nio-4545-exec-1] com.netflix.config.ChainedDynamicProperty [checkAndFlip] - Flipping property: BookingMS.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-09-22 09:24:13  INFO [http-nio-4545-exec-1] com.netflix.loadbalancer.BaseLoadBalancer [initWithConfig] - Client: BookingMS instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BookingMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-09-22 09:24:13  INFO [http-nio-4545-exec-1] com.netflix.loadbalancer.DynamicServerListLoadBalancer [enableAndInitLearnNewServersFeature] - Using serverListUpdater PollingServerListUpdater
2021-09-22 09:24:13  INFO [http-nio-4545-exec-1] com.netflix.loadbalancer.DynamicServerListLoadBalancer [restOfInit] - DynamicServerListLoadBalancer for client BookingMS initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BookingMS,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.netflix.loadbalancer.ConfigurationBasedServerList@2ed17992
2021-09-22 09:24:13 ERROR [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [log] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: No instances available for BookingMS] with root cause
java.lang.IllegalStateException: No instances available for BookingMS
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:119)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:99)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:56)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.infy.infygo.flight.controller.FlightController.getFlights(FlightController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 09:26:13  INFO [RMI TCP Connection(11)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 09:26:13  INFO [RMI TCP Connection(11)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 09:26:13  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632302773347, current=DOWN, previous=UP]
2021-09-22 09:26:13  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:26:13  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:26:13  INFO [Thread-4] com.netflix.loadbalancer.PollingServerListUpdater [run] - Shutting down the Executor Pool for PollingServerListUpdater
2021-09-22 09:26:13  INFO [RMI TCP Connection(11)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:26:13  INFO [RMI TCP Connection(11)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 09:26:13  INFO [RMI TCP Connection(11)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 09:26:13  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 09:26:16  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 09:26:16  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 09:26:16  INFO [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 09:26:30  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 15108 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 09:26:30  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 09:26:30  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 09:26:30  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 09:26:31  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 09:26:31  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 220 ms. Found 1 JPA repository interfaces.
2021-09-22 09:26:32  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bd1c6937-e3b4-3f59-aa6d-97e448d18223
2021-09-22 09:26:32  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 09:26:32  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 09:26:32  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 09:26:33  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 09:26:33  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 09:26:33  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3472 ms
2021-09-22 09:26:33  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 09:26:34  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 09:26:34  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 09:26:34  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 09:26:34  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 09:26:34  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 09:26:36  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 09:26:36  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 09:26:36  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 09:26:36  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 09:26:36  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 09:26:36  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 09:26:36  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 09:26:38  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 09:26:38  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 09:26:38  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 09:26:38  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 09:26:38  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 09:26:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 09:26:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 09:26:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 09:26:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632302799693 with initial instances count: 3
2021-09-22 09:26:39  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 09:26:39  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632302799700, current=UP, previous=STARTING]
2021-09-22 09:26:39  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 09:26:39  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 09:26:39  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 09:26:39  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 09:26:39  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 11.677 seconds (JVM running for 13.467)
2021-09-22 09:26:40  INFO [RMI TCP Connection(1)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 09:26:40  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 09:26:40  INFO [RMI TCP Connection(1)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 09:27:10  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:27:10  INFO [http-nio-4545-exec-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 09:31:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:36:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:41:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:46:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:51:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 09:56:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:01:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:06:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:11:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:16:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:21:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:26:39  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:29:07  INFO [RMI TCP Connection(72)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 10:29:07  INFO [RMI TCP Connection(72)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 10:29:07  INFO [RMI TCP Connection(72)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632306547444, current=DOWN, previous=UP]
2021-09-22 10:29:07  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 10:29:07  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 10:29:07  INFO [RMI TCP Connection(72)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 10:29:07  INFO [RMI TCP Connection(72)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 10:29:07  INFO [RMI TCP Connection(72)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 10:29:07  INFO [RMI TCP Connection(72)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 10:29:10  INFO [RMI TCP Connection(72)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 10:29:10  INFO [RMI TCP Connection(72)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 10:29:10  INFO [RMI TCP Connection(72)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 10:29:25  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 1112 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 10:29:25  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 10:29:25  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 10:29:25  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 10:29:27  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 10:29:28  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 359 ms. Found 1 JPA repository interfaces.
2021-09-22 10:29:28  WARN [main] org.springframework.boot.actuate.endpoint.EndpointId [logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2021-09-22 10:29:28  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=e2989a2e-345c-3d58-96bd-4216493c4b9c
2021-09-22 10:29:30  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 10:29:30  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 10:29:30  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 10:29:30  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 10:29:31  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 10:29:31  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 5455 ms
2021-09-22 10:29:31  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 10:29:31  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 10:29:31  INFO [main] com.netflix.config.DynamicPropertyFactory [getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5627b8eb
2021-09-22 10:29:31  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 10:29:32  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 10:29:32  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 10:29:32  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 10:29:33  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 10:29:33  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 10:29:34  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 10:29:34  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 10:29:36  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 10:29:36  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 10:29:36  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 10:29:38  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 10:29:38  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 10:29:38  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 10:29:38  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 10:29:38  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 10:29:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 10:29:38  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 10:29:39  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 10:29:39  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 10:29:40  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 10:29:40  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 10:29:40  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 4 ms
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632306580490 with initial instances count: 2
2021-09-22 10:29:40  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 10:29:40  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632306580503, current=UP, previous=STARTING]
2021-09-22 10:29:40  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 10:29:40  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 10:29:40  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 10:29:40  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 10:29:40  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 17.613 seconds (JVM running for 19.466)
2021-09-22 10:29:55  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:29:55  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:30:06  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:30:06  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:30:07  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:30:07  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:30:08  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:30:08  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:31:29  INFO [hystrix-FlightController-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:31:29  INFO [hystrix-FlightController-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:31:44  INFO [hystrix-FlightController-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:31:44  INFO [hystrix-FlightController-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:31:44  INFO [hystrix-FlightController-7] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:31:44  INFO [hystrix-FlightController-7] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:31:51  INFO [hystrix-FlightController-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F102
2021-09-22 10:31:51  INFO [hystrix-FlightController-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F102
2021-09-22 10:32:08  INFO [hystrix-FlightController-9] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F103
2021-09-22 10:32:08  INFO [hystrix-FlightController-9] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F103
2021-09-22 10:32:36  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:32:36  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:32:38  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:32:38  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:20  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:20  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:21  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:21  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:22  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:22  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:23  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:23  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:25  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:33:25  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:34:40  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:35:36  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:35:36  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:35:37  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:35:37  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:35:38  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:35:38  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:35:39  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:35:39  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:35:44  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:35:44  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:35:54  INFO [RMI TCP Connection(16)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 10:35:54  INFO [RMI TCP Connection(16)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 10:35:54  INFO [RMI TCP Connection(16)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632306954454, current=DOWN, previous=UP]
2021-09-22 10:35:54  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 10:35:54  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 10:35:54  INFO [RMI TCP Connection(16)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 10:35:54  INFO [RMI TCP Connection(16)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 10:35:54  INFO [RMI TCP Connection(16)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 10:35:54  INFO [RMI TCP Connection(16)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 10:35:57  INFO [RMI TCP Connection(16)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 10:35:57  INFO [RMI TCP Connection(16)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 10:35:57  INFO [RMI TCP Connection(16)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 10:36:05  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 13016 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 10:36:05  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 10:36:06  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 10:36:06  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 10:36:07  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 10:36:07  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 246 ms. Found 1 JPA repository interfaces.
2021-09-22 10:36:08  WARN [main] org.springframework.boot.actuate.endpoint.EndpointId [logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2021-09-22 10:36:08  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=e2989a2e-345c-3d58-96bd-4216493c4b9c
2021-09-22 10:36:09  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 10:36:09  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 10:36:09  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 10:36:09  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 10:36:09  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 10:36:09  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3862 ms
2021-09-22 10:36:10  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 10:36:10  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 10:36:10  INFO [main] com.netflix.config.DynamicPropertyFactory [getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2374452a
2021-09-22 10:36:10  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 10:36:10  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 10:36:10  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 10:36:10  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 10:36:11  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 10:36:11  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 10:36:12  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 10:36:12  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 10:36:13  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 10:36:13  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 10:36:13  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 10:36:15  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 10:36:15  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 10:36:15  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 10:36:15  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 10:36:15  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 10:36:15  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 10:36:15  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 10:36:15  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 10:36:15  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:36:16  INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 10:36:16  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 10:36:16  INFO [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 4 ms
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632306976861 with initial instances count: 3
2021-09-22 10:36:16  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 10:36:16  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632306976869, current=UP, previous=STARTING]
2021-09-22 10:36:16  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 10:36:16  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 10:36:16  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 10:36:16  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 10:36:17  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 12.756 seconds (JVM running for 14.02)
2021-09-22 10:36:27  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:27  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:29  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:29  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:30  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:30  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:30  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:30  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:32  INFO [hystrix-FlightController-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:32  INFO [hystrix-FlightController-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:36:38  INFO [hystrix-FlightController-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:38  INFO [hystrix-FlightController-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:42  INFO [hystrix-FlightController-7] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:42  INFO [hystrix-FlightController-7] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:43  INFO [hystrix-FlightController-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:43  INFO [hystrix-FlightController-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:43  INFO [hystrix-FlightController-9] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:43  INFO [hystrix-FlightController-9] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:44  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:44  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:44  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:44  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:45  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:36:45  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:37:27  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:27  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:28  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:28  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:29  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:29  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:30  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:30  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:30  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:30  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:31  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:31  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:32  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:32  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:32  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:32  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:33  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:33  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:34  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:34  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:37:46  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:37:46  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:41:16  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:41:20  INFO [RMI TCP Connection(13)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 10:41:20  INFO [RMI TCP Connection(13)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 10:41:20  INFO [RMI TCP Connection(13)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632307280524, current=DOWN, previous=UP]
2021-09-22 10:41:20  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 10:41:20  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 10:41:20  INFO [RMI TCP Connection(13)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 10:41:20  INFO [RMI TCP Connection(13)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 10:41:20  INFO [RMI TCP Connection(13)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 10:41:20  INFO [RMI TCP Connection(13)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 10:41:23  INFO [RMI TCP Connection(13)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 10:41:23  INFO [RMI TCP Connection(13)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 10:41:23  INFO [RMI TCP Connection(13)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 10:41:38  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 15692 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 10:41:38  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 10:41:38  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 10:41:38  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 10:41:40  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 10:41:40  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 236 ms. Found 1 JPA repository interfaces.
2021-09-22 10:41:40  WARN [main] org.springframework.boot.actuate.endpoint.EndpointId [logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2021-09-22 10:41:40  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=e2989a2e-345c-3d58-96bd-4216493c4b9c
2021-09-22 10:41:41  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 10:41:41  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 10:41:41  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 10:41:42  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 10:41:42  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 10:41:42  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3928 ms
2021-09-22 10:41:42  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 10:41:42  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 10:41:42  INFO [main] com.netflix.config.DynamicPropertyFactory [getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6be8ce1b
2021-09-22 10:41:42  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 10:41:42  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 10:41:43  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 10:41:43  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 10:41:43  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 10:41:44  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 10:41:45  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 10:41:45  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 10:41:46  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 10:41:46  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 10:41:46  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 10:41:47  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 10:41:47  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 10:41:47  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 10:41:47  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 10:41:47  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 10:41:47  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 10:41:47  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 10:41:48  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 10:41:49  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632307309006 with initial instances count: 3
2021-09-22 10:41:49  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 10:41:49  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632307309014, current=UP, previous=STARTING]
2021-09-22 10:41:49  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 10:41:49  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 10:41:49  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 10:41:49  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 10:41:49  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 12.665 seconds (JVM running for 13.941)
2021-09-22 10:42:05  INFO [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 10:42:05  INFO [http-nio-4545-exec-1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 10:42:05  INFO [http-nio-4545-exec-1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 10:42:06  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:42:06  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:42:08  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:42:08  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:42:09  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:42:09  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:42:10  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:42:10  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F105
2021-09-22 10:42:22  INFO [hystrix-FlightController-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:22  INFO [hystrix-FlightController-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:29  INFO [hystrix-FlightController-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:29  INFO [hystrix-FlightController-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:30  INFO [hystrix-FlightController-7] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:30  INFO [hystrix-FlightController-7] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:30  INFO [hystrix-FlightController-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:30  INFO [hystrix-FlightController-8] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:31  INFO [hystrix-FlightController-9] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:31  INFO [hystrix-FlightController-9] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:42:43  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:42:43  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:42:44  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:42:44  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:42:45  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:42:45  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:42:45  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:42:45  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F104
2021-09-22 10:43:06  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:43:06  INFO [hystrix-FlightController-10] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 10:46:48  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:51:48  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 10:56:48  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:01:48  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:06:48  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:06:52  INFO [RMI TCP Connection(32)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 11:06:52  INFO [RMI TCP Connection(32)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 11:06:52  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632308812610, current=DOWN, previous=UP]
2021-09-22 11:06:52  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 11:06:52  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 11:06:52  INFO [RMI TCP Connection(32)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 11:06:52  INFO [RMI TCP Connection(32)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 11:06:52  INFO [RMI TCP Connection(32)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 11:06:52  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 11:06:55  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 11:06:55  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 11:06:56  INFO [RMI TCP Connection(32)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 11:07:05  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 3836 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 11:07:05  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 11:07:05  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 11:07:05  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 11:07:07  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 11:07:07  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 228 ms. Found 1 JPA repository interfaces.
2021-09-22 11:07:07  WARN [main] org.springframework.boot.actuate.endpoint.EndpointId [logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2021-09-22 11:07:07  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bfa45275-677a-34e1-9dc3-30bb4eeb0672
2021-09-22 11:07:08  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 11:07:08  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 11:07:08  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 11:07:09  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 11:07:09  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 11:07:09  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3717 ms
2021-09-22 11:07:09  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 11:07:09  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 11:07:09  INFO [main] com.netflix.config.DynamicPropertyFactory [getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@621392ea
2021-09-22 11:07:09  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 11:07:10  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 11:07:10  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 11:07:10  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 11:07:10  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 11:07:11  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 11:07:12  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 11:07:12  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 11:07:13  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 11:07:13  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 11:07:13  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 11:07:14  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 11:07:14  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 11:07:14  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 11:07:14  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 11:07:14  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 11:07:14  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 11:07:14  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 11:07:15  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 11:07:16  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 11:07:16  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 11:07:16  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 11:07:16  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632308836112 with initial instances count: 3
2021-09-22 11:07:16  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 11:07:16  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632308836120, current=UP, previous=STARTING]
2021-09-22 11:07:16  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 11:07:16  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 11:07:16  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 11:07:16  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 11:07:16  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 12.445 seconds (JVM running for 13.728)
2021-09-22 11:07:26  INFO [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 11:07:26  INFO [http-nio-4545-exec-1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 11:07:26  INFO [http-nio-4545-exec-1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 3 ms
2021-09-22 11:07:27  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:07:27  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:07:30  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:07:30  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:12:15  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:17:15  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:22:05  INFO [RMI TCP Connection(23)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 11:22:05  INFO [RMI TCP Connection(23)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 11:22:05  INFO [RMI TCP Connection(23)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632309725117, current=DOWN, previous=UP]
2021-09-22 11:22:05  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 11:22:05  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 11:22:05  INFO [RMI TCP Connection(23)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 11:22:05  INFO [RMI TCP Connection(23)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 11:22:05  INFO [RMI TCP Connection(23)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 11:22:05  INFO [RMI TCP Connection(23)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 11:22:08  INFO [RMI TCP Connection(23)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 11:22:08  INFO [RMI TCP Connection(23)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 11:22:08  INFO [RMI TCP Connection(23)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 11:22:17  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 16348 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 11:22:17  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 11:22:17  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 11:22:17  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 11:22:18  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 11:22:19  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 231 ms. Found 1 JPA repository interfaces.
2021-09-22 11:22:19  WARN [main] org.springframework.boot.actuate.endpoint.EndpointId [logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2021-09-22 11:22:19  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=bfa45275-677a-34e1-9dc3-30bb4eeb0672
2021-09-22 11:22:20  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 11:22:20  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 11:22:20  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 11:22:20  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 11:22:20  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 11:22:20  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3671 ms
2021-09-22 11:22:21  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 11:22:21  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 11:22:21  INFO [main] com.netflix.config.DynamicPropertyFactory [getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@56f72909
2021-09-22 11:22:21  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 11:22:21  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 11:22:21  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 11:22:21  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 11:22:22  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 11:22:22  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 11:22:23  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 11:22:23  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 11:22:24  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 11:22:24  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 11:22:24  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 11:22:25  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 11:22:25  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 11:22:25  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 11:22:25  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 11:22:25  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 11:22:26  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 11:22:26  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 11:22:26  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 11:22:26  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632309747363 with initial instances count: 4
2021-09-22 11:22:27  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 11:22:27  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632309747370, current=UP, previous=STARTING]
2021-09-22 11:22:27  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 11:22:27  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 11:22:27  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 11:22:27  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 11:22:27  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 12.222 seconds (JVM running for 13.488)
2021-09-22 11:22:38  INFO [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 11:22:38  INFO [http-nio-4545-exec-1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 11:22:38  INFO [http-nio-4545-exec-1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 11:22:39  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:22:39  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:22:42  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:22:42  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:27:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:32:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:37:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:42:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:44:25  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights flightId
2021-09-22 11:44:25  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights flightId
2021-09-22 11:44:54  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:44:54  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 11:47:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:52:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 11:57:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:02:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:07:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:12:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:17:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:22:27  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:22:32  INFO [RMI TCP Connection(68)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 12:22:32  INFO [RMI TCP Connection(68)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 12:22:32  INFO [RMI TCP Connection(68)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632313352290, current=DOWN, previous=UP]
2021-09-22 12:22:32  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 12:22:32  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 12:22:32  INFO [RMI TCP Connection(68)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 12:22:32  INFO [RMI TCP Connection(68)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 12:22:32  INFO [RMI TCP Connection(68)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 12:22:32  INFO [RMI TCP Connection(68)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 12:22:35  INFO [RMI TCP Connection(68)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 12:22:35  INFO [RMI TCP Connection(68)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 12:22:35  INFO [RMI TCP Connection(68)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 12:22:48  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 10360 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 12:22:48  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 12:22:48  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 12:22:48  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 12:22:50  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 12:22:50  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 259 ms. Found 1 JPA repository interfaces.
2021-09-22 12:22:50  WARN [main] org.springframework.boot.actuate.endpoint.EndpointId [logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2021-09-22 12:22:50  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=5ec5211b-5350-3afb-b76c-4a608e07b516
2021-09-22 12:22:51  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 12:22:51  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 12:22:51  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 12:22:52  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 12:22:52  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 12:22:52  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 4033 ms
2021-09-22 12:22:52  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 12:22:52  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 12:22:52  INFO [main] com.netflix.config.DynamicPropertyFactory [getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@bb5f9d
2021-09-22 12:22:53  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 12:22:53  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 12:22:53  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 12:22:53  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 12:22:54  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 12:22:54  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 12:22:55  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 12:22:55  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 12:22:56  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 12:22:56  WARN [main] org.springframework.cloud.openfeign.FeignClientFactoryBean [getTarget] - The provided URL is empty. Will try picking an instance via load-balancing.
2021-09-22 12:22:56  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 12:22:56  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 12:22:57  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 12:22:58  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 12:22:58  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 12:22:58  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 12:22:58  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 12:22:58  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 12:22:58  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 12:22:58  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 12:22:58  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632313379496 with initial instances count: 5
2021-09-22 12:22:59  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 12:22:59  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632313379503, current=UP, previous=STARTING]
2021-09-22 12:22:59  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 12:22:59  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 12:22:59  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 12:22:59  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 12:22:59  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 13.172 seconds (JVM running for 14.875)
2021-09-22 12:23:31  INFO [http-nio-4545-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 12:23:31  INFO [http-nio-4545-exec-2] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 12:23:31  INFO [http-nio-4545-exec-2] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 3 ms
2021-09-22 12:23:32  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:32  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:43  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:43  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:43  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:43  INFO [hystrix-FlightController-3] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:44  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:44  INFO [hystrix-FlightController-4] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:45  INFO [hystrix-FlightController-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:45  INFO [hystrix-FlightController-5] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:45  INFO [hystrix-FlightController-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:23:45  INFO [hystrix-FlightController-6] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:26:39  INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 12:26:39  INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 12:26:39  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632313599456, current=DOWN, previous=UP]
2021-09-22 12:26:39  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 12:26:39  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 12:26:39  INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 12:26:39  INFO [RMI TCP Connection(12)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 12:26:39  INFO [RMI TCP Connection(12)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 12:26:39  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 12:26:42  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 12:26:42  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 12:26:42  INFO [RMI TCP Connection(12)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 12:26:51  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 16192 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 12:26:51  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 12:26:51  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 12:26:51  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 12:26:53  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 12:26:53  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 230 ms. Found 1 JPA repository interfaces.
2021-09-22 12:26:53  WARN [main] org.springframework.boot.actuate.endpoint.EndpointId [logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2021-09-22 12:26:54  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=5ec5211b-5350-3afb-b76c-4a608e07b516
2021-09-22 12:26:54  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 12:26:54  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 12:26:54  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 12:26:55  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 12:26:55  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 12:26:55  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 3714 ms
2021-09-22 12:26:55  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 12:26:55  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 12:26:55  INFO [main] com.netflix.config.DynamicPropertyFactory [getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@14d81f2c
2021-09-22 12:26:56  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 12:26:56  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 12:26:56  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 12:26:56  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 12:26:57  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 12:26:57  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 12:26:58  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 12:26:58  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 12:26:59  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 12:26:59  WARN [main] org.springframework.cloud.openfeign.FeignClientFactoryBean [getTarget] - The provided URL is empty. Will try picking an instance via load-balancing.
2021-09-22 12:26:59  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 12:26:59  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 12:27:00  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 12:27:00  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 12:27:00  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 12:27:00  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 12:27:00  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 12:27:01  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 12:27:02  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 12:27:02  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 12:27:02  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 12:27:02  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632313622160 with initial instances count: 5
2021-09-22 12:27:02  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 12:27:02  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632313622166, current=UP, previous=STARTING]
2021-09-22 12:27:02  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 12:27:02  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 12:27:02  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 12:27:02  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 12:27:02  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 12.388 seconds (JVM running for 13.66)
2021-09-22 12:27:08  INFO [http-nio-4545-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 12:27:08  INFO [http-nio-4545-exec-1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 12:27:08  INFO [http-nio-4545-exec-1] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 3 ms
2021-09-22 12:27:08  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:27:08  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:27:12  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:27:12  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:31:24  INFO [RMI TCP Connection(15)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 12:31:24  INFO [RMI TCP Connection(15)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 12:31:24  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632313884956, current=DOWN, previous=UP]
2021-09-22 12:31:24  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 12:31:24  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 12:31:25  INFO [RMI TCP Connection(15)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 12:31:25  INFO [RMI TCP Connection(15)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 12:31:25  INFO [RMI TCP Connection(15)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 12:31:25  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 12:31:28  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 12:31:28  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - deregister  status: 200
2021-09-22 12:31:28  INFO [RMI TCP Connection(15)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 12:31:39  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 13716 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 12:31:39  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 12:31:39  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 12:31:39  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 12:31:42  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 12:31:42  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 343 ms. Found 1 JPA repository interfaces.
2021-09-22 12:31:43  WARN [main] org.springframework.boot.actuate.endpoint.EndpointId [logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2021-09-22 12:31:43  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=b0887146-f4a0-379c-9687-db5e7fbc292d
2021-09-22 12:31:45  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 12:31:45  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 12:31:45  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 12:31:46  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 12:31:46  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 12:31:46  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 6155 ms
2021-09-22 12:31:46  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 12:31:46  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 12:31:46  INFO [main] com.netflix.config.DynamicPropertyFactory [getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3e2d65e1
2021-09-22 12:31:48  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 12:31:49  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 12:31:49  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 12:31:49  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 12:31:50  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 12:31:51  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 12:31:53  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 12:31:53  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 12:31:55  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 12:31:55  WARN [main] org.springframework.cloud.openfeign.FeignClientFactoryBean [getTarget] - The provided URL is empty. Will try picking an instance via load-balancing.
2021-09-22 12:31:56  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 12:31:56  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 12:31:58  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 12:31:58  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 12:31:59  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 12:31:59  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 12:31:59  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 12:31:59  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 12:31:59  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 12:32:00  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 12:32:01  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 12:32:01  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 12:32:01  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 12:32:01  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632313921200 with initial instances count: 3
2021-09-22 12:32:01  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 12:32:01  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632313921227, current=UP, previous=STARTING]
2021-09-22 12:32:01  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 12:32:01  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 12:32:01  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 12:32:01  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 12:32:01  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 23.939 seconds (JVM running for 25.818)
2021-09-22 12:32:45  INFO [http-nio-4545-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-22 12:32:45  INFO [http-nio-4545-exec-2] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Initializing Servlet 'dispatcherServlet'
2021-09-22 12:32:45  INFO [http-nio-4545-exec-2] org.springframework.web.servlet.DispatcherServlet [initServletBean] - Completed initialization in 2 ms
2021-09-22 12:32:45  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:32:45  INFO [hystrix-FlightController-1] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:36:26  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:36:26  INFO [hystrix-FlightController-2] com.infy.infygo.flight.service.FlightService [getFlights] - Profile request for flights F101
2021-09-22 12:37:00  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:42:00  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:47:00  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:52:00  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:57:00  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:57:56  INFO [RMI TCP Connection(38)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [shutdown] - Application shutdown requested.
2021-09-22 12:57:56  INFO [RMI TCP Connection(38)-127.0.0.1] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [deregister] - Unregistering application FLIGHTMS with eureka with status DOWN
2021-09-22 12:57:56  INFO [RMI TCP Connection(38)-127.0.0.1] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632315476915, current=DOWN, previous=UP]
2021-09-22 12:57:56  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 12:57:56  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/} exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2021-09-22 12:57:56  WARN [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 12:57:56  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more

2021-09-22 12:57:56  WARN [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 12:57:56  WARN [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 12:57:56  WARN [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.InstanceInfoReplicator [run] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 12:57:57  INFO [RMI TCP Connection(38)-127.0.0.1] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [destroy] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 12:57:57  INFO [RMI TCP Connection(38)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown initiated...
2021-09-22 12:57:57  INFO [RMI TCP Connection(38)-127.0.0.1] com.zaxxer.hikari.HikariDataSource [close] - HikariPool-1 - Shutdown completed.
2021-09-22 12:57:57  INFO [RMI TCP Connection(38)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Shutting down DiscoveryClient ...
2021-09-22 12:58:00  INFO [RMI TCP Connection(38)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - Unregistering ...
2021-09-22 12:58:00  INFO [RMI TCP Connection(38)-127.0.0.1] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:177)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1152)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1145)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at jdk.internal.reflect.GeneratedMethodAccessor107.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:260)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:809)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1466)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1307)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1399)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:827)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:691)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:391)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 83 more

2021-09-22 12:58:00  WARN [RMI TCP Connection(38)-127.0.0.1] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 12:58:00 ERROR [RMI TCP Connection(38)-127.0.0.1] com.netflix.discovery.DiscoveryClient [unregister] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:177)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1152)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1145)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at jdk.internal.reflect.GeneratedMethodAccessor107.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:260)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:809)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1466)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1307)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1399)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:827)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:691)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:391)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 12:58:01  INFO [RMI TCP Connection(38)-127.0.0.1] com.netflix.discovery.DiscoveryClient [shutdown] - Completed shut down of DiscoveryClient
2021-09-22 12:59:41  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarting] - Starting InfygoFlightApplication using Java 16.0.2 on DESKTOP-RSAQV86 with PID 14320 (E:\Infygoo\Infygo_Flight\target\classes started by Karishma in E:\Infygoo\Infygo_Flight)
2021-09-22 12:59:41  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStartupProfileInfo] - No active profile set, falling back to default profiles: default
2021-09-22 12:59:41  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Fetching config from server at : http://localhost:1111
2021-09-22 12:59:41  INFO [main] org.springframework.boot.context.config.ConfigDataLoader [logTo] - Located environment: name=FlightMS, profiles=[default], label=null, version=3fbc4b76203993b78e8225e222be57d68e4c9041, state=null
2021-09-22 12:59:42  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-09-22 12:59:43  INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate [registerRepositoriesIn] - Finished Spring Data repository scanning in 259 ms. Found 1 JPA repository interfaces.
2021-09-22 12:59:43  WARN [main] org.springframework.boot.actuate.endpoint.EndpointId [logWarning] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2021-09-22 12:59:43  INFO [main] org.springframework.cloud.context.scope.GenericScope [setSerializationId] - BeanFactory id=f242538f-b980-3899-98ec-e2ac6d2a8c70
2021-09-22 12:59:45  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [initialize] - Tomcat initialized with port(s): 4545 (http)
2021-09-22 12:59:45  INFO [main] org.apache.catalina.core.StandardService [log] - Starting service [Tomcat]
2021-09-22 12:59:45  INFO [main] org.apache.catalina.core.StandardEngine [log] - Starting Servlet engine: [Apache Tomcat/9.0.50]
2021-09-22 12:59:45  INFO [main] org.apache.jasper.servlet.TldScanner [log] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-09-22 12:59:45  INFO [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [log] - Initializing Spring embedded WebApplicationContext
2021-09-22 12:59:45  INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [prepareWebApplicationContext] - Root WebApplicationContext: initialization completed in 4760 ms
2021-09-22 12:59:46  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 12:59:46  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 12:59:46  INFO [main] com.netflix.config.DynamicPropertyFactory [getInstance] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1b7a4930
2021-09-22 12:59:46  WARN [main] org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration [logCheckResult] - Check result of the [RestTemplateSender{http://localhost:9999/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9999/api/v2/spans": Connection refused: no further information; nested exception is java.net.ConnectException: Connection refused: no further information}]
2021-09-22 12:59:47  INFO [main] org.hibernate.jpa.internal.util.LogHelper [logPersistenceUnitInformation] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-09-22 12:59:48  INFO [main] org.hibernate.Version [logVersion] - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-09-22 12:59:48  INFO [main] org.hibernate.annotations.common.Version [<clinit>] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-22 12:59:48  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Starting...
2021-09-22 12:59:48  INFO [main] com.zaxxer.hikari.HikariDataSource [getConnection] - HikariPool-1 - Start completed.
2021-09-22 12:59:49  INFO [main] org.hibernate.dialect.Dialect [<init>] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-09-22 12:59:50  INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [initiateService] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-09-22 12:59:50  INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [buildNativeEntityManagerFactory] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-09-22 12:59:51  WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [openEntityManagerInViewInterceptor] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-09-22 12:59:51  WARN [main] org.springframework.cloud.openfeign.FeignClientFactoryBean [getTarget] - The provided URL is empty. Will try picking an instance via load-balancing.
2021-09-22 12:59:51  WARN [main] com.netflix.config.sources.URLConfigurationSource [<init>] - No URLs will be polled as dynamic configuration sources.
2021-09-22 12:59:51  INFO [main] com.netflix.config.sources.URLConfigurationSource [<init>] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-22 12:59:52  INFO [main] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [discoveryClientOptionalArgs] - Eureka HTTP Client uses Jersey
2021-09-22 12:59:53  WARN [main] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [logWarning] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-09-22 12:59:53  INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [<init>] - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-09-22 12:59:53  INFO [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [create] - Setting initial instance status as: STARTING
2021-09-22 12:59:54  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Initializing Eureka in region us-east-1
2021-09-22 12:59:54  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON encoding codec LegacyJacksonJson
2021-09-22 12:59:54  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using JSON decoding codec LegacyJacksonJson
2021-09-22 12:59:54  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML encoding codec XStreamXml
2021-09-22 12:59:54  INFO [main] com.netflix.discovery.provider.DiscoveryJerseyProvider [<init>] - Using XML decoding codec XStreamXml
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: true
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [initScheduledTasks] - Starting heartbeat executor: renew interval is: 30
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.InstanceInfoReplicator [<init>] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [<init>] - Discovery Client initialized at timestamp 1632315595448 with initial instances count: 3
2021-09-22 12:59:55  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [register] - Registering application FLIGHTMS with eureka with status UP
2021-09-22 12:59:55  INFO [main] com.netflix.discovery.DiscoveryClient [notify] - Saw local status change event StatusChangeEvent [timestamp=1632315595468, current=UP, previous=STARTING]
2021-09-22 12:59:55  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 12:59:55  INFO [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 12:59:55  INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [start] - Tomcat started on port(s): 4545 (http) with context path ''
2021-09-22 12:59:55  INFO [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [onApplicationEvent] - Updating port to 4545
2021-09-22 12:59:55  INFO [main] com.infy.infygo.flight.InfygoFlightApplication [logStarted] - Started InfygoFlightApplication in 16.674 seconds (JVM running for 17.976)
2021-09-22 13:04:55  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 13:09:55  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 13:14:55  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 13:19:55  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 13:20:26  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/} exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more

2021-09-22 13:20:26  WARN [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 13:20:26  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2021-09-22 13:20:26  WARN [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 13:20:26  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)

2021-09-22 13:20:26  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/} exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 more

2021-09-22 13:20:26  WARN [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 13:20:26  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more

2021-09-22 13:20:26  WARN [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 13:20:26 ERROR [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [renew] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 13:20:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2021-09-22 13:20:56  WARN [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 13:20:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)

2021-09-22 13:20:56  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [execute] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:2222/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:669)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:645)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more

2021-09-22 13:20:56  WARN [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [execute] - Request execution failed with message: java.net.ConnectException: Connection refused: no further information
2021-09-22 13:20:56 ERROR [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [renew] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
2021-09-22 13:21:26  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [renew] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - Re-registering apps/FLIGHTMS
2021-09-22 13:21:26  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545: registering service...
2021-09-22 13:21:26  INFO [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient [register] - DiscoveryClient_FLIGHTMS/DESKTOP-RSAQV86:FlightMS:4545 - registration status: 204
2021-09-22 13:21:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Disable delta property : false
2021-09-22 13:21:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Single vip registry refresh property : null
2021-09-22 13:21:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Force full registry fetch : false
2021-09-22 13:21:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application is null : false
2021-09-22 13:21:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Registered Applications size is zero : true
2021-09-22 13:21:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [fetchRegistry] - Application version is -1: false
2021-09-22 13:21:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - Getting all instance registry info from the eureka server
2021-09-22 13:21:56  INFO [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient [getAndStoreFullRegistry] - The response status is 200
2021-09-22 13:24:55  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 13:29:55  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 13:34:55  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 13:39:55  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
2021-09-22 13:44:55  INFO [AsyncResolver-bootstrap-executor-0] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [getClusterEndpoints] - Resolving eureka endpoints via configuration
